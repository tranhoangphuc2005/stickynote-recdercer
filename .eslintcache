[{"/Users/macair/Desktop/stickynote/src/index.js":"1","/Users/macair/Desktop/stickynote/src/App.js":"2","/Users/macair/Desktop/stickynote/src/reportWebVitals.js":"3","/Users/macair/Desktop/stickynote/src/Components/Note.js":"4","/Users/macair/Desktop/stickynote/src/Components/AddNote.js":"5","/Users/macair/Desktop/stickynote/src/Components/Edit.js":"6"},{"size":507,"mtime":1611393762441,"results":"7","hashOfConfig":"8"},{"size":1387,"mtime":1611484706958,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611392847515,"results":"10","hashOfConfig":"8"},{"size":2366,"mtime":1611484530402,"results":"11","hashOfConfig":"8"},{"size":2126,"mtime":1611484026780,"results":"12","hashOfConfig":"8"},{"size":2199,"mtime":1611482970111,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"r5szch",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/macair/Desktop/stickynote/src/index.js",[],["31","32"],"/Users/macair/Desktop/stickynote/src/App.js",["33","34","35","36","37","38"],"import axios from \"axios\";\nimport { useState, useEffect, createContext, useReducer } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Drawer, Button } from \"antd\";\n\nimport Note from \"./Components/Note\";\nimport Edit from \"./Components/Edit\";\n\nexport const NotesContext = createContext();\n\nconst reducer = (state, action) => {\n  // console.log(action);\n  if (action.type === \"GET_NOTES\") {\n    return {\n      ...state,\n      notes: action.payload,\n    };\n  }\n  if (action.type === \"GET_COLORS\") {\n    return {\n      ...state,\n      colors: action.payload,\n    };\n  }\n  if (action.type === \"ADD_NOTE\") {\n    return {\n      ...state,\n      notes: [...state.notes, action.payload],\n    };\n  }\n  if (action.type === \"DELETE_NOTE\") {\n    return {\n      ...state,\n      notes: state.notes.filter((note) => note.id !== action.payload),\n    };\n  }\n  return state;\n};\n\nconst initialState = {\n  notes: [],\n  colors: [],\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <NotesContext.Provider value={{ state, dispatch }}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Note />\n          </Route>\n          <Route exact path=\"/:id\">\n            <Edit />\n          </Route>\n        </Switch>\n      </Router>\n    </NotesContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/macair/Desktop/stickynote/src/reportWebVitals.js",[],"/Users/macair/Desktop/stickynote/src/Components/Note.js",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55"],"import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport AddNote from \"./AddNote\";\nimport { Row, Col } from \"antd\";\nimport { Skeleton, Card, Avatar, Input, Drawer } from \"antd\";\nimport {\n  EditTwoTone,\n  EllipsisOutlined,\n  SettingOutlined,\n  DeleteTwoTone,\n  BookTwoTone,\n  EditOutlined,\n  SaveFilled,\n  UpCircleFilled,\n} from \"@ant-design/icons\";\nimport { Button, Tooltip } from \"antd\";\nimport axios from \"axios\";\n\nimport { NotesContext } from \"../App\";\nlet api = `http://localhost:5000/notes`;\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\n\nconst Note = () => {\n  const context = useContext(NotesContext);\n  const {\n    state: { notes },\n    dispatch,\n  } = context;\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const res = await axios.get(api);\n      if (res.status === 200) {\n        const { data } = res;\n        dispatch({ type: \"GET_NOTES\", payload: data });\n      }\n    };\n    fetchNotes();\n  }, []);\n  const deleteNote = async (id) => {\n    let res = await axios.delete(`${api}/${id}`);\n    if (res.status == 200) {\n      dispatch({ type: \"DELETE_NOTE\", payload: id });\n    }\n  };\n\n  return (\n    <>\n      <AddNote />\n      <Row justify=\"space-around\">\n        {notes.map((note) => (\n          <Col span={8}>\n            <Card\n              style={{ width: 300, marginTop: 16 }}\n              actions={[\n                <Link to={note.id}>\n                  <EditTwoTone key=\"edit\" />\n                </Link>,\n\n                <DeleteTwoTone\n                  key=\"delete\"\n                  onClick={() => deleteNote(note.id)}\n                />,\n                <BookTwoTone key=\"bookmark\" twoToneColor=\"#52c41a\" />,\n              ]}\n            >\n              <div className={\"header-card\"}>\n                <UpCircleFilled />\n                <p>Label</p>\n              </div>\n              <div className={\"content-note\"}>{note.content}</div>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Note;\n\n{\n  /* <Skeleton avatar active>\n          <Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title=\"Card title\"\n            description=\"This is the description\"\n          />\n        </Skeleton> */\n}\n","/Users/macair/Desktop/stickynote/src/Components/AddNote.js",["56"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Tooltip, Drawer } from \"antd\";\nimport {\n  PlusOutlined,\n  UnorderedListOutlined,\n  SmileTwoTone,\n} from \"@ant-design/icons\";\nimport \"./AddNote.css\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { NotesContext } from \"../App\";\n\nlet api = `http://localhost:5000/colors`;\nlet apiNotes = `http://localhost:5000/notes`;\n\nconst AddNote = () => {\n  const context = useContext(NotesContext);\n  const {\n    state: { colors },\n    dispatch,\n  } = context;\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      const res = await axios.get(api);\n      if (res.status === 200) {\n        const { data } = res;\n        dispatch({ type: \"GET_COLORS\", payload: data });\n      }\n    };\n    fetchColors();\n  }, []);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const showDrawer = () => {\n    setIsOpen(true);\n  };\n\n  const addNote = async () => {\n    const newNote = {\n      id: uuidv4(),\n      content: \"\",\n      title: \"\",\n      bookmark: false,\n    };\n    let res = await axios.post(`${apiNotes}`, newNote);\n    if (res.status === 201) {\n      dispatch({ type: \"ADD_NOTE\", payload: newNote });\n    }\n  };\n\n  return (\n    <div className={\"header-my-note\"}>\n      <Drawer\n        title=\"Label\"\n        placement=\"right\"\n        closable={true}\n        onClose={onClose}\n        visible={isOpen}\n      >\n        {colors.map((color) => (\n          <div className={\"label-list\"}>\n            <SmileTwoTone twoToneColor={color.codeColor} />\n            <p>{color.label}</p>\n          </div>\n        ))}\n      </Drawer>\n      <Tooltip title=\"Add note\">\n        <Button\n          type=\"dashed\"\n          shape=\"circle\"\n          icon={<PlusOutlined />}\n          className=\"btn-custom\"\n          onClick={addNote}\n        />\n      </Tooltip>\n      <h2>My note</h2>\n      <Button\n        icon={<UnorderedListOutlined key=\"list-lable\" twoToneColor=\"#FF7F50\" />}\n        onClick={showDrawer}\n      >\n        Lable\n      </Button>\n    </div>\n  );\n};\n\nexport default AddNote;\n","/Users/macair/Desktop/stickynote/src/Components/Edit.js",["57","58","59","60","61","62"],"import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport { NotesContext } from \"../App\";\nimport { Input, Tooltip, Button } from \"antd\";\nimport { SaveFilled, FundViewOutlined } from \"@ant-design/icons\";\nimport { Row, Col, Card, notification } from \"antd\";\nimport marked from \"marked\";\n\nconst { TextArea } = Input;\n\nlet api = `http://localhost:5000/notes`;\n\nconst Edit = () => {\n  let { id } = useParams();\n\n  const [note, setNote] = useState({});\n\n  const context = useContext(NotesContext);\n  const {\n    state: { notes },\n    dispatch,\n  } = context;\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const res = await axios.get(`${api}/${id}`);\n      if (res.status === 200) {\n        const { data } = res;\n        dispatch({ type: \"GET_NOTES\", payload: data });\n\n        setNote(data);\n      }\n    };\n    fetchNotes();\n  }, []);\n\n  const editNote = async () => {\n    let res = await axios.put(`${api}/${id}`, note);\n    if (res.status === 200) {\n      notification.success({ message: \"Success\" });\n    }\n  };\n\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col span={10}>\n          <TextArea\n            rows={4}\n            value={note.content}\n            onChange={(e) => {\n              setNote({ ...note, content: e.target.value });\n            }}\n            // dangerouslySetInnerHTML={{ __html: marked(note.content) }}\n          />\n        </Col>\n        <Col span={4}>\n          <div className={\"btn-save\"}>\n            <Tooltip title=\"Save\">\n              <Button\n                shape=\"circle\"\n                icon={<SaveFilled />}\n                onClick={() => editNote()}\n              />\n            </Tooltip>\n            <Tooltip title=\"Preview\">\n              <Button shape=\"circle\" icon={<FundViewOutlined />} />\n            </Tooltip>\n          </div>\n        </Col>\n        <Col span={10}>\n          <Card>\n            <div\n              dangerouslySetInnerHTML={{ __html: marked(note.content || \"\") }}\n            ></div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Edit;\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":18},{"ruleId":"67","severity":1,"message":"72","line":2,"column":20,"nodeType":"69","messageId":"70","endLine":2,"endColumn":29},{"ruleId":"67","severity":1,"message":"73","line":3,"column":50,"nodeType":"69","messageId":"70","endLine":3,"endColumn":54},{"ruleId":"67","severity":1,"message":"74","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":16},{"ruleId":"67","severity":1,"message":"75","line":4,"column":18,"nodeType":"69","messageId":"70","endLine":4,"endColumn":24},{"ruleId":"67","severity":1,"message":"76","line":2,"column":27,"nodeType":"69","messageId":"70","endLine":2,"endColumn":33},{"ruleId":"67","severity":1,"message":"77","line":2,"column":35,"nodeType":"69","messageId":"70","endLine":2,"endColumn":41},{"ruleId":"67","severity":1,"message":"78","line":2,"column":43,"nodeType":"69","messageId":"70","endLine":2,"endColumn":48},{"ruleId":"67","severity":1,"message":"79","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":18},{"ruleId":"67","severity":1,"message":"80","line":5,"column":26,"nodeType":"69","messageId":"70","endLine":5,"endColumn":32},{"ruleId":"67","severity":1,"message":"74","line":5,"column":41,"nodeType":"69","messageId":"70","endLine":5,"endColumn":47},{"ruleId":"67","severity":1,"message":"81","line":8,"column":3,"nodeType":"69","messageId":"70","endLine":8,"endColumn":19},{"ruleId":"67","severity":1,"message":"82","line":9,"column":3,"nodeType":"69","messageId":"70","endLine":9,"endColumn":18},{"ruleId":"67","severity":1,"message":"83","line":12,"column":3,"nodeType":"69","messageId":"70","endLine":12,"endColumn":15},{"ruleId":"67","severity":1,"message":"84","line":13,"column":3,"nodeType":"69","messageId":"70","endLine":13,"endColumn":13},{"ruleId":"67","severity":1,"message":"75","line":16,"column":10,"nodeType":"69","messageId":"70","endLine":16,"endColumn":16},{"ruleId":"67","severity":1,"message":"85","line":16,"column":18,"nodeType":"69","messageId":"70","endLine":16,"endColumn":25},{"ruleId":"67","severity":1,"message":"86","line":22,"column":9,"nodeType":"69","messageId":"70","endLine":22,"endColumn":13},{"ruleId":"67","severity":1,"message":"87","line":23,"column":9,"nodeType":"69","messageId":"70","endLine":23,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":41,"column":6,"nodeType":"90","endLine":41,"endColumn":8,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":44,"column":20,"nodeType":"94","messageId":"95","endLine":44,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":84,"column":1,"nodeType":"98","messageId":"99","endLine":94,"endColumn":2},{"ruleId":"88","severity":1,"message":"89","line":33,"column":6,"nodeType":"90","endLine":33,"endColumn":8,"suggestions":"100"},{"ruleId":"67","severity":1,"message":"76","line":4,"column":20,"nodeType":"69","messageId":"70","endLine":4,"endColumn":26},{"ruleId":"67","severity":1,"message":"77","line":5,"column":3,"nodeType":"69","messageId":"70","endLine":5,"endColumn":9},{"ruleId":"67","severity":1,"message":"78","line":6,"column":3,"nodeType":"69","messageId":"70","endLine":6,"endColumn":8},{"ruleId":"67","severity":1,"message":"73","line":7,"column":3,"nodeType":"69","messageId":"70","endLine":7,"endColumn":7},{"ruleId":"67","severity":1,"message":"101","line":27,"column":14,"nodeType":"69","messageId":"70","endLine":27,"endColumn":19},{"ruleId":"88","severity":1,"message":"102","line":42,"column":6,"nodeType":"90","endLine":42,"endColumn":8,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Drawer' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Skeleton' is defined but never used.","'Avatar' is defined but never used.","'EllipsisOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'SaveFilled' is defined but never used.","'Tooltip' is defined but never used.","'Meta' is assigned a value but never used.","'TextArea' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["107"],"'notes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},{"range":"116","text":"115"},"Update the dependencies array to be: [dispatch, id]",{"range":"117","text":"118"},[1015,1017],"[dispatch]",[811,813],[985,987],"[dispatch, id]"]